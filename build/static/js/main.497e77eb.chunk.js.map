{"version":3,"sources":["redux/actions/cardActions.js","redux/actions/listActions.js","redux/actions/boardActions.js","redux/actions/index.js","components/TodoCard.js","components/AddButton.js","components/TodoList.js","redux/reducers/ListReducer.js","redux/reducers/CardReducer.js","redux/reducers/BoardReducer.js","redux/reducers/setActiveReducer.js","redux/reducers/BoardOrderReducer.js","redux/reducers/index.js","redux/store/index.js","components/Navbar.js","components/Board.js","components/AddBoard.js","components/BoardCollection.js","App.js","reportWebVitals.js","index.js"],"names":["addCard","listID","text","id","uuidv4","type","CONSTANTS","ADD_CARD","payload","removeCard","REMOVE_CARD","editCard","newText","EDIT_CARD","addList","title","boardID","ADD_LIST","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","editList","newTitle","EDIT_LIST","removeList","REMOVE_LIST","activeBoard","ACTIVE_BOARD","addBoard","ADD_BOARD","TodoCard","state","editing","closeForm","e","preventDefault","setState","handleDelete","props","console","log","dispatch","handleChange","target","value","handleSave","handleEdit","renderEditForm","placeholder","onChange","onMouseDown","onClick","renderCard","index","String","provided","draggableProps","dragHandleProps","ref","innerRef","className","aria-hidden","style","paddingRight","this","Component","connect","AddButton","formState","openForm","handleAddList","handleAddCard","renderForm","list","placeHolder","buttonTitle","width","autoFocus","onBlur","aria-label","ToAddCard","buttonType","buttonColor","buttonTextColor","buttonTextOpacity","opacity","cursor","color","backgroundColor","TodoList","cards","droppableId","margin","marginTop","padding","borderRadius","droppableProps","map","card","initialState","board","ListReducer","action","push","newCards","filter","cardID","newList","newState","splice","listStart","listEnd","cardsReducer","newCard","lists","boardReducer","newListID","newLists","pulledOutList","newID","newBoard","setActiveReducer","boardOrderReducer","combineReducers","CardReducer","boards","BoardReducer","active","SetActiveReducer","boardOrder","store","createStore","rootReducer","Navbar","to","marginLeft","DropdownButton","display","float","Dropdown","Item","textDecoration","Board","onDragEnd","result","destination","source","match","params","getState","document","body","anotherBoard","listOrder","direction","flexDirection","listCards","cardId","AddBoard","handleAddBoard","createBoard","onSubmit","height","textAlign","BoardCollection","renderBoardsTest","renderBoards","App","fontFamily","class","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.497e77eb.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport const addCard = (listID, text) => {\r\n    const id = uuidv4();\r\n    return {\r\n        type: CONSTANTS.ADD_CARD,\r\n        payload: {text, listID, id}\r\n    }\r\n}\r\n\r\nexport const removeCard = (id, listID) => {\r\n    return {\r\n        type: CONSTANTS.REMOVE_CARD,\r\n        payload: {id, listID}\r\n    }\r\n}\r\n\r\nexport const editCard = (id, listID, newText) => {\r\n    return {\r\n        type: CONSTANTS.EDIT_CARD,\r\n        payload: {id, listID, newText}\r\n    }\r\n}","import { CONSTANTS } from \"./index\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const addList = (title, boardID) => {\r\n    const id = uuidv4();\r\n    return {\r\n        type: CONSTANTS.ADD_LIST,\r\n        payload: {title, boardID, id},\r\n    }\r\n}\r\n\r\nexport const sort = (droppableIdStart, droppableIdEnd, droppableIndexStart, droppableIndexEnd, draggableId, type, boardID) => {\r\n    return {\r\n        type: CONSTANTS.DRAG_HAPPENED,\r\n        payload: {\r\n            droppableIdStart,\r\n            droppableIdEnd,\r\n            droppableIndexStart,\r\n            droppableIndexEnd,\r\n            draggableId,\r\n            type,\r\n            boardID\r\n        }\r\n    }\r\n}\r\n\r\nexport const editList = (listID, newTitle) => {\r\n    return {\r\n        type: CONSTANTS.EDIT_LIST,\r\n        payload: {listID, newTitle}\r\n    }\r\n}\r\n\r\nexport const removeList = (listID, boardID) => {\r\n    //const boardID = \"board-0\";\r\n    return {\r\n        type: CONSTANTS.REMOVE_LIST,\r\n        payload: {listID, boardID}\r\n    }\r\n}","import { CONSTANTS } from \"../actions\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport const activeBoard = (id) => {\r\n    return {\r\n        type: CONSTANTS.ACTIVE_BOARD,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const addBoard = (title) => {\r\n    const id = uuidv4();\r\n    return {\r\n        type: CONSTANTS.ADD_BOARD,\r\n        payload: {title, id}\r\n    }\r\n}","export * from \"./cardActions\";\r\nexport * from \"./listActions\";\r\nexport * from \"./boardActions\";\r\n\r\nexport const CONSTANTS = {\r\n    ADD_CARD: \"ADD_CARD\",\r\n    ADD_LIST: \"ADD_LIST\",\r\n    REMOVE_CARD: \"REMOVE_CARD\",\r\n    DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n    EDIT_CARD: \"EDIT_CARD\",\r\n    EDIT_LIST: \"EDIT_LIST\",\r\n    REMOVE_LIST: \"REMOVE_LIST\",\r\n    ADD_BOARD: \"ADD_BOARD\",\r\n    ACTIVE_BOARD: \"ACTIVE_BOARD\"\r\n}","import React, { Component } from 'react';\r\nimport { removeCard, editCard } from \"../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport TextArea from \"react-autosize-textarea\";\r\n\r\nclass TodoCard extends Component {\r\n\r\n    state = {\r\n        editing: false,\r\n        text: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { text } = this.props;\r\n        console.log(text);\r\n        this.setState({text})\r\n    }\r\n\r\n    closeForm = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ editing: false });\r\n    }\r\n\r\n    handleDelete = (e) => {\r\n        e.preventDefault();\r\n        const { id, listID } = this.props;\r\n        console.log(listID);\r\n        this.props.dispatch(removeCard(id, listID));\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSave = (e) => {\r\n        this.setState({ editing: false })\r\n        const { id, listID } = this.props;\r\n        const newText = this.state.text;\r\n        this.props.dispatch(editCard(id, listID, newText));\r\n    }\r\n\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({editing: true})\r\n        console.log(\"edit option is open now\");\r\n        console.log(this.props.text);\r\n    }\r\n\r\n    renderEditForm = () => {\r\n        return (\r\n            <div>\r\n                <TextArea placeholder={this.state.text} value={this.state.text} onChange={this.handleChange}></TextArea>\r\n                <button onMouseDown={this.closeForm}>close</button>\r\n                <button onClick={this.handleSave}>save</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCard = () => {\r\n        const { id, index, text, listID } = this.props;\r\n\r\n        return (\r\n        \r\n            <Draggable draggableId={String(id)} index={index}>\r\n                {(provided) => (\r\n                <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                    <div className=\"card\" >\r\n                    <p className=\"editButton\">\r\n                        {text}\r\n                        <div className=\"hide\">\r\n                            {/*<i className=\"fa fa-pencil-square-o\" onMouseDown={this.handleEdit}></i>*/}\r\n                            <i onMouseDown={this.handleDelete} className=\"fa fa-trash\" aria-hidden=\"true\" style={{paddingRight: \"2px\"}}></i>\r\n                        </div>\r\n                        <div className=\"hide\">\r\n                            <i className=\"fa fa-pencil-square-o\" onMouseDown={this.handleEdit}></i>\r\n                            {/*<i onMouseDown={this.handleDelete} className=\"fa fa-trash\" aria-hidden=\"true\" style={{paddingRight: \"2px\"}}></i>*/}\r\n                        </div>        \r\n                    </p>\r\n                    </div>\r\n                </div>\r\n                )}\r\n            </Draggable>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { id, index, text,listID } = this.props;\r\n        return this.state.editing ? this.renderEditForm() : this.renderCard();\r\n    }\r\n}\r\n                 \r\nexport default connect()(TodoCard);\r\n\r\n/*\r\n            <div>\r\n                {this.state.editing ?  this.renderCard() : this.renderEditForm() }\r\n            </div>\r\n*/","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport TextArea from \"react-autosize-textarea\";\r\nimport { addCard, removeCard, addList } from \"../redux/actions\";\r\n\r\nclass AddButton extends Component {\r\n    state = {  \r\n        formState: false,\r\n        text: \"\"\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.props.boardID);\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({\r\n            formState: true\r\n        })\r\n    }\r\n    \r\n    closeForm = () => {\r\n        this.setState({\r\n            formState: false\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    handleAddList = () => {\r\n        const { text } = this.state;\r\n        \r\n        if (text) {\r\n            this.props.dispatch(addList(text, this.props.boardID));\r\n        }\r\n\r\n        this.setState({\r\n            text: \"\"\r\n        })\r\n\r\n        return;\r\n    }\r\n\r\n    handleAddCard = () => {\r\n        const { listID } = this.props;\r\n        const { text } = this.state;\r\n\r\n        if (text) {\r\n            this.props.dispatch(addCard(listID, text));\r\n        }\r\n\r\n        this.setState({\r\n            text: \"\"\r\n        })\r\n    }\r\n\r\n    renderForm = () => {\r\n        const { list } = this.props;\r\n        const placeHolder = list ? \"Enter list title\" : \"Enter title for card\";\r\n        const buttonTitle = list ? \"Add list\" : \"Add card\";\r\n\r\n        return (\r\n            <div className=\"renderForm\">\r\n                <div className=\"card\" style={{ width: \"80%\" }}>\r\n                    <TextArea placeholder={placeHolder} autoFocus onBlur={this.closeForm} onChange={this.handleChange} value={this.state.text}></TextArea>\r\n                </div>\r\n                <div>\r\n                    <button onMouseDown={list ? this.handleAddList : this.handleAddCard} className=\"btn btn-success\">{buttonTitle}</button>\r\n                    <button type=\"button\" className=\"close\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    ToAddCard = () => {\r\n        const { list } = this.props;\r\n        const buttonType = list ? \"Add another list\" : \"Add another card\";\r\n        const buttonColor = list ? \"#5ba4cf\" : \"transparent\";\r\n        const buttonTextColor = list ? \"white\" : \"black\";\r\n        const buttonTextOpacity = list ? 1 : 0.5;\r\n\r\n        return (\r\n            <div className=\"openForm\" onClick={this.openForm} style={{opacity: buttonTextOpacity, cursor: \"pointer\", color: buttonTextColor, backgroundColor: buttonColor}}> {/*style={{opacity: buttonTextOpacity, cursor: \"pointer\", color: buttonTextColor, backgroundColor: buttonColor, width: \"272px\", height: \"32px\", borderRadius: \"4px\", margin: \"10px\"}}*/}\r\n                <p><i className=\"fa fa-plus\" aria-hidden=\"true\"></i>{buttonType}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            this.state.formState ? this.renderForm() : this.ToAddCard()\r\n         );\r\n    }\r\n}\r\n \r\nexport default connect()(AddButton);\r\n\r\n/*\r\n    test = () => {\r\n        console.log(\"add called to redux\");\r\n        this.props.dispatch(addCard(\"list-0\", \"added text\"));\r\n    }\r\n\r\n    test_del = () => {\r\n        this.props.dispatch(removeCard('card-0','list-0'))\r\n    }\r\n*/","import React, { Component } from 'react';\r\nimport TodoCard from \"./TodoCard\";\r\nimport AddButton from \"./AddButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { editList, removeList } from \"../redux/actions\";\r\nimport TextArea from \"react-autosize-textarea\";\r\n\r\nclass TodoList extends Component {\r\n\r\n    state = {\r\n        editing: false,\r\n        title: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props;\r\n        this.setState({ title });\r\n    }\r\n\r\n    closeForm = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            editing: false\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            title: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSave = (e) => {\r\n        this.setState({ editing: false });\r\n        const { listID } = this.props;\r\n        const newTitle = this.state.title;\r\n        this.props.dispatch(editList(listID, newTitle));\r\n    }\r\n\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ editing: true });\r\n    }\r\n\r\n    renderEditForm = () => {\r\n        return (\r\n            <div>\r\n                <TextArea placeholder={this.state.title} value={this.state.title} onChange={this.handleChange}></TextArea>\r\n                <button onClick={this.closeForm}>close</button>\r\n                <button onClick={this.handleSave}>save</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleDelete = (e) => {\r\n        e.preventDefault();\r\n        const { listID, boardID } = this.props;\r\n        console.log(\"delete list is called\" + listID);\r\n        this.props.dispatch(removeList(listID,boardID));\r\n    }\r\n\r\n    render() {\r\n\r\n        const { cards, listID, index } = this.props;\r\n\r\n        return ( \r\n                <Draggable draggableId={String(listID)} index={index}>\r\n                    {(provided) => (\r\n                    <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                        <Droppable droppableId={String(listID)} type=\"card\">\r\n                        {(provided) => (\r\n                        <div className=\"card\" style={{ backgroundColor: \"#ebecf0\", width: \"100%\", margin: \"10px\", marginTop: \"10\", padding: \"2px\", borderRadius: \"3px\" }}>{/* style={{ backgroundColor: \"#ebecf0\", width: \"100%\", margin: \"10px\", marginTop: \"10\", padding: \"2px\", borderRadius: \"3px\", maxHeight: \"100%\" }} boxSizing: \"border-box\"*/}\r\n                        {this.state.editing ? (this.renderEditForm()) : (\r\n                        <p className=\"editButton\">{/*onMouseDown={this.handleEdit}*/}\r\n                            {this.props.title}\r\n                            <div className=\"hide\">\r\n                                {/*<i className=\"fa fa-pencil-square-o\" onClick={this.handleEdit}></i>*/}\r\n                                <i className=\"fa fa-trash\" onClick={this.handleDelete}></i>                \r\n                            </div>                  \r\n                            <div className=\"hide\">\r\n                                <i className=\"fa fa-pencil-square-o\" onClick={this.handleEdit}></i>\r\n                                {/*<i className=\"fa fa-trash\" onClick={this.handleDelete}></i>*/}                \r\n                            </div>                             \r\n                        </p>            \r\n                        )}\r\n                        <div {...provided.droppableProps} ref={provided.innerRef}>   \r\n                        {cards.map((card, index) => (\r\n                            <div style={{width: \"95%\", margin: \"0 auto 10px\"}}>\r\n                                <TodoCard\r\n                                    key={card.id}\r\n                                    text={card.text}\r\n                                    id={card.id}\r\n                                    listID={listID}\r\n                                    index={index}\r\n                                ></TodoCard>\r\n                            </div>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                        <AddButton listID={listID} cards></AddButton>\r\n                        </div> \r\n                        </div>\r\n                        )}                \r\n                        </Droppable>\r\n                    </div>\r\n                    )}\r\n                </Draggable>\r\n         );\r\n    }\r\n}\r\n \r\nexport default connect()(TodoList);","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n    \"list-0\": {\r\n        id: \"list-0\",\r\n        cards: [\"card-0\"],\r\n        title: \"my-list\",\r\n        board: \"board-0\"\r\n    },\r\n};\r\n\r\n/* \r\n    \"list-1\": {\r\n        id: \"list-1\",\r\n        cards: [\"card-0\",\"card-1\"],\r\n        title: \"my-second-list\"\r\n    }\r\n*/\r\n\r\nconst ListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case CONSTANTS.ADD_CARD: {\r\n            const { listID, id } = action.payload;\r\n            const list = state[listID];\r\n            list.cards.push(`card-${id}`);\r\n            return { ...state, [listID]: list };\r\n        }\r\n            \r\n        case CONSTANTS.REMOVE_CARD: {\r\n        const { listID, id } = action.payload;\r\n        const list = state[listID];\r\n        const newCards = list.cards.filter(cardID => cardID !== id);\r\n        \r\n        return { ...state, [listID]: { ...list, cards: newCards } };\r\n        }\r\n            \r\n        case CONSTANTS.ADD_LIST: {\r\n            const { title, id } = action.payload;\r\n            const newList = {\r\n                title: title,\r\n                id: `list-${id}`,\r\n                cards: []\r\n            };\r\n\r\n            const newState = { ...state, [`list-${id}`]: newList };\r\n            return newState;\r\n        }\r\n            \r\n        case CONSTANTS.DRAG_HAPPENED: {\r\n          const { droppableIdStart, droppableIdEnd, droppableIndexEnd, droppableIndexStart, type } = action.payload;\r\n\r\n          // draggin lists around - the listOrderReducer should handle this\r\n          if (type === \"list\") {\r\n            return state;\r\n          }\r\n\r\n          // in the same list\r\n          if (droppableIdStart === droppableIdEnd) {\r\n            const list = state[droppableIdStart];\r\n            const card = list.cards.splice(droppableIndexStart, 1);\r\n            list.cards.splice(droppableIndexEnd, 0, ...card);\r\n            return { ...state, [droppableIdStart]: list };\r\n          }\r\n\r\n          // other list\r\n          if (droppableIdStart !== droppableIdEnd) {\r\n          // find the list where the drag happened\r\n            const listStart = state[droppableIdStart];\r\n          // pull out the card from this list\r\n            const card = listStart.cards.splice(droppableIndexStart, 1);\r\n          // find the list where the drag ended\r\n            const listEnd = state[droppableIdEnd];\r\n          // put the card in the new list\r\n            listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n          return {...state,[droppableIdStart]: listStart,[droppableIdEnd]: listEnd};\r\n          }\r\n          return state;\r\n        }\r\n        \r\n        case CONSTANTS.EDIT_LIST: {\r\n          const { listID, newTitle } = action.payload;\r\n          const list = state[listID];\r\n          list.title = newTitle;\r\n          return { ...state, [listID]: list };\r\n        }\r\n        \r\n        case CONSTANTS.REMOVE_LIST: {\r\n            const { listID } = action.payload;\r\n            console.log(\"list reducer: \" + listID);  \r\n            const newState = state;\r\n            delete newState[listID];\r\n            return newState;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n            \r\n    }\r\n}\r\n\r\nexport default ListReducer;\r\n\r\n/*\r\n\r\n*/\r\n\r\n/*\r\n            const { droppableIdStart, droppableIdEnd, droppableIndexStart, droppableIndexEnd, type } = action.payload;\r\n            const newState = [...state];\r\n\r\n            // dragging list\r\n            if (type === \"list\") {\r\n               // const list = newState.splice(droppableIndexStart, 1);\r\n                //newState.splice(droppableIndexEnd, 0, ...list);\r\n                return newState;\r\n            }\r\n\r\n            // same list\r\n            if (droppableIdStart !== droppableIdEnd) {\r\n                const listStart = state.find(list => droppableIdStart === list.id);\r\n                const card = listStart.cards.splice(droppableIndexStart, 1);\r\n\r\n            }\r\n\r\n            // other list\r\n            if (droppableIdStart !== droppableIdEnd) {\r\n                const listStart = state.find(list => droppableIdStart === list.id);\r\n                const card = listStart.cards.splice(droppableIndexStart, 1);\r\n                const listEnd = state.find(list => droppableIdEnd === list.id);\r\n                listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n            }\r\n            return newState;\r\n*/","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n    \"card-0\": {\r\n        text: `This episode`,\r\n        id: `card-0`,\r\n        list: \"list-0\"\r\n    }\r\n}\r\n\r\n/* \r\n    \"card-1\": {\r\n        text: `Next episode`,\r\n        id: `card-1`,\r\n        list: \"list-0\"\r\n    }\r\n*/\r\n\r\nconst cardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case CONSTANTS.ADD_CARD: {\r\n            console.log(\"add card\");\r\n            const { text, listID, id } = action.payload;\r\n            const newCard = {\r\n                text,\r\n                id: `card-${id}`,\r\n                list: listID\r\n            };\r\n            //console.log(\"new card: \" + newCard);\r\n            const newState = { ...state, [`card-${id}`]: newCard};\r\n            //console.log(\"updated state : \" + newState);\r\n            return { ...state, [`card-${id}`]: newCard };\r\n        }\r\n            \r\n        case CONSTANTS.REMOVE_CARD: {\r\n            const { id } = action.payload;\r\n            //const newState = state.filter(value => value !== state[id]);\r\n            const newState = state;\r\n            delete newState[id];\r\n            return newState;\r\n        }\r\n            \r\n        case CONSTANTS.EDIT_CARD: {\r\n            const { id, newText } = action.payload;\r\n            const card = state[id];\r\n            card.text = newText;\r\n            return { ...state, [`card-${id}`]: card };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cardsReducer;","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n    \"board-0\": {\r\n        id: \"board-0\",\r\n        lists: [\"list-0\"],\r\n        title: \"myboard\"\r\n    }\r\n}\r\n\r\nconst boardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case CONSTANTS.ADD_LIST: {\r\n            const { boardID, id } = action.payload;\r\n            const board = state[boardID];\r\n            const newListID = `list-${id}`;\r\n            const newLists = [...board.lists, newListID];\r\n            board.lists = newLists;\r\n            return { ...state, [boardID]: board };\r\n        }\r\n\r\n        case CONSTANTS.DRAG_HAPPENED: {\r\n            //const boardID = \"board-0\";\r\n            const { boardID } = action.payload;\r\n            const board = state[boardID];\r\n            const lists = board.lists;\r\n            const { droppableIndexEnd, droppableIndexStart, type } = action.payload;\r\n            \r\n            // dragging lists\r\n            if (type === \"list\") {\r\n                const pulledOutList = lists.splice(droppableIndexStart, 1);\r\n                lists.splice(droppableIndexEnd, 0, ...pulledOutList);\r\n                board.lists = lists;\r\n                return { ...state, [boardID]: board };\r\n            }\r\n            return state;\r\n        }\r\n            \r\n        case CONSTANTS.REMOVE_LIST: {\r\n            const { listID, boardID } = action.payload;\r\n            console.log(\"board reducer:\" + listID + \" \" + boardID);\r\n            const board = state[boardID];\r\n            const lists = board.lists;\r\n            const newLists = lists.filter(id => id !== listID);\r\n            board.lists = newLists;\r\n            return { ...state, [boardID]: board };\r\n        }\r\n            \r\n        case CONSTANTS.ADD_BOARD: {\r\n            const { title, id } = action.payload;\r\n            const newID = `board-${id}`;\r\n            const newBoard = {\r\n                id: newID,\r\n                title: title,\r\n                lists: []\r\n            }\r\n            console.log(\"add board from reducer\")\r\n            console.log(\"new state: \" + { ...state, [newID]: newBoard });\r\n            console.log(\"title: \" + title + \", id:\" + id);\r\n            return { ...state, [newID]: newBoard };\r\n        }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default boardReducer;","import { CONSTANTS } from \"../actions\";\r\nimport store from \"../store\";\r\n\r\nconst initialState = null;\r\n\r\nconst setActiveReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        \r\n        case CONSTANTS.ACTIVE_BOARD: {\r\n            console.log(\"active board id: \" + action.payload);\r\n            state = action.payload;\r\n            console.log(state)\r\n            return state;\r\n        }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default setActiveReducer;","import { CONSTANTS } from \"../actions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst initialState = [\"board-0\"];\r\n\r\nconst boardOrderReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case CONSTANTS.ADD_BOARD: {\r\n            return [...state, `board-${action.payload.id}`];\r\n        }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default boardOrderReducer;","import { combineReducers } from \"redux\";\r\nimport ListReducer from \"./ListReducer\";\r\nimport CardReducer from \"./CardReducer\";\r\nimport BoardReducer from \"./BoardReducer\";\r\nimport SetActiveReducer from \"./setActiveReducer\";\r\nimport boardOrderReducer from \"./BoardOrderReducer\";\r\n\r\nexport default combineReducers({\r\n    lists: ListReducer,\r\n    cards: CardReducer,\r\n    boards: BoardReducer,\r\n    active: SetActiveReducer,\r\n    boardOrder: boardOrderReducer\r\n})","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { Dropdown, DropdownButton, Nav} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {    \r\n    const { boards, boardOrder } = this.props;\r\n\r\n    return ( \r\n      <div>\r\n        <Link to=\"/\" style={{color: \"white\", marginLeft: \"0\"}}><i className=\"fa fa-home\"></i></Link>\r\n        <DropdownButton id=\"dropdown-basic-button\" title=\"Boards\" style={{display: \"inline-block\", float: \"center\"}}>\r\n          {boardOrder.map((boardID) => {\r\n            const board = boards[boardID];\r\n            return(\r\n              <Dropdown.Item key={boardID}>\r\n                  <Link to={`/${board.id}`} style={{ textDecoration: \"none\" }}>{board.title}</Link>\r\n              </Dropdown.Item>\r\n            )\r\n          })}\r\n        </DropdownButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport TodoList from \"./TodoList\";\r\nimport AddButton from \"./AddButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { sort } from \"../redux/actions\";\r\nimport { activeBoard } from \"../redux/actions\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport store from '../redux/store';\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass Board extends Component {\r\n\r\n    state = {\r\n        boardID: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { boardID } = this.props.match.params;\r\n        this.props.dispatch(activeBoard(boardID));\r\n        this.setState({ boardID });\r\n        console.log(\"active : \" + store.getState().active)\r\n        document.body.style.backgroundColor = \"#0079bf\";\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"active state from board collection: \" + store.getState().active);\r\n        const { boardID } = this.props.match.params;\r\n        if (this.state.boardID !== boardID) {\r\n            this.setState({ boardID });\r\n            this.props.dispatch(activeBoard(boardID));   \r\n        }\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        // come here again\r\n        //const boardID = this.state.boardID;\r\n        const { destination, source, draggableId, type } = result;\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        this.props.dispatch(sort(source.droppableId, destination.droppableId, source.index, destination.index, draggableId, type, this.state.boardID));\r\n    }\r\n    \r\n    render() { \r\n\r\n        const { lists, cards, boards, boardOrder } = this.props;\r\n        const boardID = this.state.boardID;\r\n        //const { boardID } = this.props.match.params;\r\n        console.log(boardID);\r\n        const anotherBoard = boards[boardID];\r\n        console.log(anotherBoard);\r\n        const board = boards[boardID];\r\n        if (!board) {\r\n            return <p>Board not found</p>\r\n        }\r\n        const listOrder = board.lists;\r\n\r\n        return ( \r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n                {provided => (\r\n                <div  {...provided.droppableProps} ref={provided.innerRef} style={{ display: \"flex\", flexDirection: \"row\"}}>    \r\n                {listOrder.map((listID, index) => {\r\n                    const list = lists[listID];\r\n                    if (list) {\r\n                        const listCards = list.cards.map(cardId => cards[cardId]);\r\n                        return (\r\n                            <div style={{ width: \"272px\", margin: \"0 4px\"}}> {/**/}\r\n                                <TodoList\r\n                                    listID={list.id}\r\n                                    key={list.id}\r\n                                    title={list.title}\r\n                                    cards={listCards}\r\n                                    index={index}\r\n                                    boardID={this.state.boardID}\r\n                                ></TodoList>\r\n                            </div>\r\n                        );\r\n                    }\r\n                })}\r\n                {provided.placeholder}\r\n                <AddButton list boardID={this.state.boardID}></AddButton>\r\n                </div>          \r\n                )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lists: state.lists,\r\n    cards: state.cards,\r\n    boards: state.boards,\r\n    boardOrder: state.boardOrder\r\n});\r\n\r\nexport default connect(mapStateToProps)(Board);","import React, { Component } from 'react';\r\nimport { addBoard } from \"../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AddBoard extends Component {\r\n    \r\n    state = {\r\n        title: \"Create new board\"\r\n    }\r\n    \r\n    handleAddBoard = (e) => {\r\n        e.preventDefault();\r\n        const title = this.state.title; \r\n        this.props.dispatch(addBoard(title));\r\n        this.setState({title: \"Create new board\"})\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n\r\n    createBoard = (e) => {\r\n       // e.preventDefault();\r\n        return (\r\n            <form onSubmit={this.handleAddBoard}>\r\n                <input onChange={this.handleChange} value={this.state.title} type=\"text\" style={{height: \"100px\", width: \"200px\", textAlign: \"center\"}}></input>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                {this.createBoard()}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default connect()(AddBoard);\r\n\r\n/*\r\n<div onClick={this.handleAddBoard} style={{ divackgroundColor: \"#97a0af\" }} >Create new board</div>\r\n*/\r\n\r\n\r\n\r\n    /*createBoard = () => {\r\n        return (\r\n            <div>\r\n                <input onSubmit={this.handleAddBoard} onChange={this.handleChange} value={this.state.title}></input>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    helper = () => {\r\n        return (\r\n            <form onSubmit={this.handleAddBoard}>\r\n                <input onChange={this.handleChange} value={this.state.title} type=\"text\"></input>\r\n            </form>\r\n        )\r\n    }*/","import React, { Component } from 'react';\r\nimport AddBoard from \"./AddBoard\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass BoardCollection extends Component {\r\n    state = {}\r\n    \r\n    componentDidMount() {\r\n        document.body.style.backgroundColor = \"white\"\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.props.boards);\r\n    }\r\n\r\n    renderBoardsTest = () => {\r\n        const { boardOrder, boards } = this.props;\r\n        boardOrder.map(boardID => {\r\n            const board = boards[boardID];\r\n            console.log(board);\r\n        })\r\n    }\r\n\r\n    renderBoards = () => {\r\n        const { boardOrder, boards } = this.props;\r\n        return (\r\n            <div>\r\n                {boardOrder.map((boardID) => {\r\n                    const board = boards[boardID];\r\n                    return (\r\n                        <Link key={boardID} to={`/${board.id}`} style={{textDecoration: \"none\", color: \"white\"}}>\r\n                            <div className=\"board-display\">{board.title}</div>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() { \r\n\r\n        const { boards, boardOrder } = this.props;\r\n\r\n        return (  \r\n            <div>\r\n                <h3>\r\n                    <i className=\"fa fa-user-o\" ></i>\r\n                    Personal Boards\r\n                </h3>\r\n                <div className=\"renderBoard\" className=\"board-container\">\r\n                    {this.renderBoards()}\r\n                    <AddBoard boards={boards}></AddBoard>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    boards: state.boards,\r\n    boardOrder: state.boardOrder\r\n});\r\n \r\nexport default connect(mapStateToProps)(BoardCollection);","import React, { Component } from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport Board from \"./components/Board\";\nimport BoardCollection from \"./components/BoardCollection\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  \n  render() { \n\n    const { boards, boardOrder } = this.props;\n\n    return ( \n      <div>\n        <Router>\n          <h3 style={{backgroundColor: \"#026aa7\", color: \"white\", fontFamily: \"cursive\"}} class=\"panel-footer\">\n            <Navbar boards={boards} boardOrder={boardOrder} class=\"fa fa-facebook\"></Navbar>\n            <em style={{color: \"#8bbdd9\"}}>Trello</em>\n          </h3>\n          <Switch>\n            <Route path=\"/\" exact component={BoardCollection} />\n            <Route path=\"/:boardID\" component={Board} />\n          </Switch>\n        </Router>\n      </div>\n     );\n  }\n}\n\nconst mapStateToProps = state => ({\n    boards: state.boards,\n    boardOrder: state.boardOrder\n});\n \nexport default connect(mapStateToProps)(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/store\";\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\n//console.log(store.getState().active);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}